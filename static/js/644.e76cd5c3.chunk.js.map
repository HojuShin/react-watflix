{"version":3,"file":"static/js/644.e76cd5c3.chunk.js","mappings":"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","sources":["pages/Main/Circular/Circular.js","pages/Main/Contents/Contents.js"],"sourcesContent":["import './circular.css';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction Circular() {\r\n\r\n    const txt = ['재구독', '만족도', '어쩌구'];\r\n    const [counters, setCounters] = useState([0, 0, 0]);  // 각 원형 프로그레스 바의 진행률 (0% 초기값 설정)\r\n    const [percent, setPercent] = useState([81, 90, 72]); // 각 원형 프로그레스 바가 도달해야 하는 목표 진행률 \r\n\r\n    useEffect(() => {\r\n        // percent 배열 순회하며 각 원형 프로그레스 바에 대한 타이머를 설정\r\n        const timers = percent.map((e, i) => {\r\n            return setInterval(() => {\r\n                if (counters[i] < e) {\r\n                    setCounters((prevCounters) => {  // 이전 상태(prevCounters)를 기반으로 새로운 상태를 계산\r\n                        const newCounters = [...prevCounters];// 이전 상태를 복사\r\n                        newCounters[i] += 1; // 새로운 상태를 계산\r\n                        return newCounters; // 새로운 상태를 반환 \r\n                    });\r\n                } else {\r\n                    // 원형 프로그레스 바가 목표에 도달하면 타이머 중지\r\n                    clearInterval(timers[i]);\r\n                }\r\n            }, 15);\r\n        });\r\n\r\n        // 5초마다 원형 프로그레스 바를 초기 상태로 재설정\r\n        const resetAnimation = setInterval(() => {\r\n            setCounters([0, 0, 0]);\r\n        }, 5000);\r\n\r\n        // 컴포넌트 언마운트 함수 (모든 타이머 중지) \r\n        return () => {\r\n            timers.forEach((timer) => {\r\n                clearInterval(timer);\r\n            });\r\n            clearInterval(resetAnimation); // 타이머 중지되어 애니메이션이 다시 시작될때 처음상태로 돌아감 \r\n        };\r\n    }, [counters, percent]);\r\n\r\n    // 애니메이션 함수\r\n    const circleStyles = percent.map((e, i) => ({\r\n        background: `conic-gradient(rgb(222, 42, 96) ${3.6 * counters[i]}deg, #333 0deg)`,\r\n        transition: 'transform 5s linear'\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <div className='circular'>\r\n                <p className='circularDesc'><strong>5000만</strong>이 시청하는 <span className='watflixfont'>WATFLIX</span></p>\r\n                <div className='circularBx'>\r\n                    {percent.map((e, index) => (\r\n                        <div className=\"circle\" key={index} style={circleStyles[index]}>\r\n                            <h1 className=\"num\">{`${counters[index]}%`}</h1>\r\n                            <span className='text'>{txt[index]}</span>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div >\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Circular;","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './contents.css';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Circular from \"../Circular/Circular\";\r\nimport useMovieData from \"../../../utils/useData\";\r\n\r\nfunction Contents() {\r\n\r\n    // 현재 스크롤 위치 상태 저장\r\n    const [scroll, setScroll] = useState(0);\r\n\r\n    // movieData와 loading 상태 가져오기\r\n    const { movieData, loading } = useMovieData();\r\n\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            // scroll 상태 : 브라우저 현재 스크롤 위치 \r\n            // 브라우저가 window.pageYOffset 지원하지 않을 경우 document.documentElement.scrollTop 값 사용\r\n            const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n            setScroll(scrollTop);\r\n        };\r\n\r\n        // 컴포넌트 마운트 : 스크롤 이벤트 감지하여 handleScroll 함수 호출\r\n        window.addEventListener('scroll', handleScroll);\r\n\r\n        return () => {\r\n            // 컴포넌트 언마운트 : 스크롤 이벤트 제거\r\n            window.removeEventListener('scroll', handleScroll);\r\n        };\r\n    }, []);\r\n\r\n    // 만약 데이터가 로딩 중이라면 로딩 메시지를 반환합니다.\r\n    if (loading) {\r\n        return <p style={{color : '#717171'}}>Loading...</p>;\r\n    }\r\n\r\n    const itemNumber = 6; // 각 <li> 요소에 들어갈 영화 데이터 개수 (하나의 li 요소에 6개의 영화데이터 삽입)\r\n    const liNumber = Math.ceil(movieData.length / itemNumber);  // <li>의 총 개수 (allMovie의 길이 / 6) = 3\r\n\r\n    // jsx 변환\r\n    const list = Array.from({ length: liNumber }).map((e, i) => { // list 배열 길이=3 (즉, i = 0,1,2)\r\n        const movieList = movieData.slice(i * itemNumber, (i + 1) * itemNumber); // 0-5, 6-11, 12-17\r\n\r\n        return (\r\n            <li key={i}>\r\n                {movieList.map((movie, i) => (\r\n                    <Link to={'/detail/' + movie.id} key={movie.id}>\r\n                        <div className=\"allMovie-data\">\r\n                            <img src={movie.img} alt={`contetns ${i}`} />\r\n                        </div>\r\n                    </Link>\r\n                ))}\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <section className={`movieInfoSection ${scroll > 0 ? 'scroll-animation' : ''}`} >\r\n            <Circular />\r\n            <div id=\"contents\">\r\n                <p>오직 <span className='watflixfont'>WATFLIX</span>에서만</p>\r\n                <div className=\"contentSection\">\r\n                    <input type=\"radio\" name=\"slide\" id=\"slideMv01\" defaultChecked={true} ></input>\r\n                    <input type=\"radio\" name=\"slide\" id=\"slideMv02\" ></input>\r\n                    <div className=\"slidewrap\">\r\n                        <div className=\"slide-control\">\r\n                            <div className=\"control01\">\r\n                                <label htmlFor=\"slideMv02\" className=\"right\">\r\n                                    <FontAwesomeIcon icon={faChevronRight} style={{ color: '#98989a' }} />\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"control02\">\r\n                                <label htmlFor=\"slideMv01\" className=\"left\">\r\n                                    <FontAwesomeIcon icon={faChevronLeft} style={{ color: '#98989a' }} />\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <ul className=\"slidelist\">\r\n                            {list}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Contents;"],"names":["txt","_useState","useState","_useState2","_slicedToArray","counters","setCounters","_useState3","_useState4","percent","useEffect","timers","map","e","i","setInterval","prevCounters","newCounters","_toConsumableArray","clearInterval","resetAnimation","forEach","timer","circleStyles","background","concat","transition","_jsx","_Fragment","children","_jsxs","className","index","style","scroll","setScroll","_useMovieData","useMovieData","movieData","loading","handleScroll","scrollTop","window","pageYOffset","document","documentElement","addEventListener","removeEventListener","color","liNumber","Math","ceil","length","list","Array","from","movieList","slice","movie","Link","to","id","src","img","alt","Circular","type","name","defaultChecked","htmlFor","FontAwesomeIcon","icon","faChevronRight","faChevronLeft"],"sourceRoot":""}