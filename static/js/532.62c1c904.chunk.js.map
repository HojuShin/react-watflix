{"version":3,"file":"static/js/532.62c1c904.chunk.js","mappings":"gKA6BA,MA3BA,WACI,OACIA,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAAA,OAAKG,GAAG,SAAQD,UACZE,EAAAA,EAAAA,MAAA,WAASC,UAAU,gBAAeH,SAAA,EAC9BE,EAAAA,EAAAA,MAAA,MAAIC,UAAU,aAAYH,SAAA,EACtBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,8BACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iDACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,wDACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iCAERF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,UAASH,UACpBE,EAAAA,EAAAA,MAAA,MAAIC,UAAU,cAAaH,SAAA,EACvBE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EAAIF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,uDAAc,MAAEF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,oBAC7BE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EAAIF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,yCAAU,MAAEF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,4BACzBE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EAAIF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,kDAAc,MAAEF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,4CAAgB,aAGrDF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,YAAWH,UACtBF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,gFAM3B,C,6LC6IA,MAhKA,WAGI,IAAAI,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAG9BI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAGtBG,GAA+BC,EAAAA,EAAAA,KAAvBC,EAASF,EAATE,UAAWC,EAAOH,EAAPG,QAGbC,EAAe,WACjB,IAAMC,EAAYC,aAAaC,QAAQ,YACvC,OAAOC,KAAKC,MAAMJ,EACtB,EAGMK,EAAkB,SAACC,GAErBA,EAAOC,MAAMC,KAAK,IAAIC,IAAIH,EAAKI,IAAIP,KAAKQ,aAAaD,IAAIP,KAAKC,OAC9DH,aAAaW,QAAQ,WAAYT,KAAKQ,UAAUL,GACpD,EAQA,IANAO,EAAAA,EAAAA,YAAU,WACN,IAAMb,EAAYD,KAAkB,GAEpCL,EAASM,EACb,GAAG,IAECF,EACA,OAAOnB,EAAAA,EAAAA,KAAA,KAAGmC,MAAO,CAACC,MAAQ,WAAWlC,SAAC,eAI1C,IAAMmC,EAAcnB,EAAUoB,QAAO,SAACC,GAElC,IAAMC,EAAqBD,EAAME,MAAMC,QAAQ,MAAO,IAChDC,EAAyBjC,EAAUgC,QAAQ,MAAO,IAGxD,OAAOF,EAAmBI,SAASD,EACvC,IAwCA,OACIvC,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,mBAAkBH,UAC5BF,EAAAA,EAAAA,KAAC6C,EAAAA,GAAI,CAACC,GAAI,IAAI5C,UACVF,EAAAA,EAAAA,KAAA,OAAK+C,IAAKC,EAAM3C,UAAU,mBAAmB4C,IAAI,kBAGzD7C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQH,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SACIkD,KAAK,OACLC,YAAY,kCACZhD,GAAG,cACHiD,SAAU,SAACC,GAAQ1C,EAAa0C,EAAEC,OAAOC,MAAO,KAEpDvD,EAAAA,EAAAA,KAAA,OAAKK,UAAU,YAAWH,UACtBF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,uBAAsBH,SAEX,IAArBQ,EAAU8C,OAEU,IAAjB1C,EAAM0C,QACFxD,EAAAA,EAAAA,KAAA,KAAGK,UAAU,SAAQH,SAAC,4CAGtBE,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAC,SAAA,EACIE,EAAAA,EAAAA,MAAA,OAAKD,GAAG,sBAAqBD,SAAA,EACzBF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,UAASH,SAAC,wDAC1BF,EAAAA,EAAAA,KAAA,QAAMK,UAAU,YAAYoD,QAAS,YAlClD,WACnB,IAAMC,EAAM,GACZ,GAAIpC,aAAaC,QAAQ,YACrBG,EAAgBgC,GACT3C,EAAS2C,EAExB,CA4BiFC,EAAiB,EAAEzD,SAAC,uCAEpEY,EAAMiB,KAAI,SAACJ,EAAMiC,GAAC,OACd5D,EAAAA,EAAAA,KAAC6C,EAAAA,GAAI,CAACC,GAAE,WAAAe,OAAalC,EAAKxB,IAAO2D,MAAO,CAAE5C,UAAWS,GAAOzB,UACzDE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcH,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,kBAAiBH,UAC5BF,EAAAA,EAAAA,KAAA,OAAK+C,IAAKpB,EAAKoC,IAAKd,IAAG,UAAAY,OAAYD,QAEvC5D,EAAAA,EAAAA,KAAA,OAAKK,UAAU,oBAAmBH,UAC9BF,EAAAA,EAAAA,KAAA,KAAAE,SAAIyB,EAAKc,WAEbzC,EAAAA,EAAAA,KAAA,OAAKK,UAAU,eAAcH,UACzBF,EAAAA,EAAAA,KAACgE,EAAAA,EAAe,CAACC,KAAMC,EAAAA,IACnBC,KAAK,KACL9D,UAAU,qBACV8B,MAAO,CAAEC,MAAO,sBAChBqB,QAAS,SAACJ,GACNA,EAAEe,iBAnEtC,SAACC,GAKjB,IAHA,IAAIC,EAAWlD,IAGNwC,EAAI,EAAGA,EAAIU,EAASd,OAAQI,IAC7BU,EAASV,GAAGzD,KAAOkE,GACnBC,EAASC,OAAOX,EAAG,GAG3BlC,EAAgB4C,GAETvD,EAASuD,EACpB,CAuDwDE,CAAY7C,EAAKxB,GACrB,UAhBmDyD,EAoB5D,QAKnB5D,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAGKmC,EAAYN,KAAI,SAACJ,EAAMiC,GAAC,OACrB5D,EAAAA,EAAAA,KAAC6C,EAAAA,GAAI,CAACC,GAAE,WAAAe,OAAalC,EAAKxB,IAAM2D,MAAO,CAAE5C,UAAWS,GAAOzB,UACvDE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAeoD,QAAS,kBA/F1C,SAACgB,GAE9B,IAAMC,EAAiBtD,KAAkB,GAMzC,OAHAsD,EAAeC,KAAKF,GACpB/C,EAAgBgD,GAET3D,EAAS2D,EACpB,CAsFiFE,CAAyBjD,EAAK,EAACzB,SAAA,EACxEF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,kBAAiBH,UAC5BF,EAAAA,EAAAA,KAAA,OAAK+C,IAAKpB,EAAKoC,IAAKd,IAAG,SAAAY,OAAWD,QAEtC5D,EAAAA,EAAAA,KAAA,OAAKK,UAAU,oBAAmBH,UAC9BF,EAAAA,EAAAA,KAAA,KAAAE,SAAIyB,EAAKc,cAN4Cd,EAAKxB,GAS/D,eAS3C,ECpFA,MAzEA,WAEI,IAAM0E,GAAWC,EAAAA,EAAAA,MAGXC,EAAY,SAACC,GACf,OAAIH,EAASI,WAAaD,EACf,OAEA,SAEf,EAGA1E,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5C4E,EAAU1E,EAAA,GAAE2E,EAAa3E,EAAA,GAEhCI,GAAsCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA9CwE,EAAWvE,EAAA,GAAEwE,EAAcxE,EAAA,GAiBlC,OACIT,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,aAAYH,UACtBF,EAAAA,EAAAA,KAAC6C,EAAAA,GAAI,CAACC,GAAI,IAAI5C,UACVF,EAAAA,EAAAA,KAAA,OAAK+C,IAAKC,EAAM3C,UAAU,mBAAmB4C,IAAI,oBAGzDjD,EAAAA,EAAAA,KAAA,UAAQG,GAAG,SAAQD,UACfF,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,YAAWH,UACtBE,EAAAA,EAAAA,MAAA,MAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAC6C,EAAAA,GAAI,CAACC,GAAI,IAAI5C,UACVF,EAAAA,EAAAA,KAACgE,EAAAA,EAAe,CAACC,KAAMqB,EAAAA,IAASnB,KAAK,KAAKhC,MAAO,CAAEC,MAAO2C,EAAU,aAG5E/E,EAAAA,EAAAA,KAAA,MAAAE,UAEIF,EAAAA,EAAAA,KAAA,UAAQK,UAAU,aAAaoD,QAhCtC,WACjB0B,GAAeD,GACfG,GAAgBD,EACpB,EA6BiFlF,UACjDF,EAAAA,EAAAA,KAACgE,EAAAA,EAAe,CAACC,KAAMsB,EAAAA,IAAmBpB,KAAK,KAAKhC,MAAO,CAAEC,OA1BrE,IAAhBgD,EACO,WACgB,IAAhBA,EACA,YADJ,UA2BapF,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAAC6C,EAAAA,GAAI,CAACC,GAAI,UAAU5C,UAChBF,EAAAA,EAAAA,KAACgE,EAAAA,EAAe,CAACC,KAAMuB,EAAAA,IAAOrB,KAAK,KAAKhC,MAAO,CAAEC,MAAO2C,EAAU,4BAS1F/E,EAAAA,EAAAA,KAAA,WAASK,UAAS,iBAAAwD,OAAmBqB,EAAa,OAAS,IAAKhF,UAC5DF,EAAAA,EAAAA,KAACyF,EAAM,QAIvB,C,8JC3BA,MA9CA,WAEI,IAAMC,GAAaC,EAAAA,EAAAA,KAAY,SAAC7B,GAAK,OAAKA,EAAM8B,MAAM,IAChDC,GAAWC,EAAAA,EAAAA,MAEjB,OACI9F,EAAAA,EAAAA,KAAA,WAASK,UAAU,YAAWH,SACH,IAAtBwF,EAAWlC,QACRpD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBH,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAK+F,MAAM,QAAQC,OAAO,QAAQC,YAAY,IAAIC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA6BhE,MAAM,UAASlC,UAACF,EAAAA,EAAAA,KAAA,QAAMqG,EAAE,oGAAoGC,OAAO,UAAUL,YAAY,IAAIM,cAAc,QAAQC,eAAe,aACvTxG,EAAAA,EAAAA,KAAA,KAAAE,SAAG,iGAGPwF,EAAW3D,KAAI,SAACsB,EAAGO,GACf,OACI5D,EAAAA,EAAAA,KAAA,OAAKK,UAAU,eAAcH,UACzBF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,YACX8B,MAAO,CACHsE,gBAAgB,OAAD5C,OAAS6B,EAAW9B,GAAG8C,UAAS,KAC/CC,eAAgB,QAChBC,mBAAoB,UACtB1G,UACFF,EAAAA,EAAAA,KAAC6C,EAAAA,GAAI,CAACC,GAAI,WAAa4C,EAAW9B,GAAGzD,GAAGD,UACpCF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,WAAUH,UACrBF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,cAAaH,UACxBE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBH,SAAA,EAC7BE,EAAAA,EAAAA,MAAA,KAAAF,SAAA,CAAIwF,EAAW9B,GAAGnB,MAAM,QACxBzC,EAAAA,EAAAA,KAAA,UAAQK,UAAU,iBAAiBoD,QAAS,SAACJ,GACzCA,EAAEe,iBACFyB,GAASgB,EAAAA,EAAAA,IAAanB,EAAW9B,IACrC,EAAE1D,UACEF,EAAAA,EAAAA,KAACgE,EAAAA,EAAe,CAACC,KAAMC,EAAAA,IAAKC,KAAK,KAAK9D,UAAU,4BAhBzCuD,EAyB3C,KAIhB,ECHA,MA5CA,WAGI,IAAIkD,EAAUxF,aAAaC,QAAQ,WAInC,OAFAuF,EAAUtF,KAAKC,MAAMqF,IAGjB9G,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAAA,WAASK,UAAU,YAAWH,SAEH,IAAnB4G,EAAQtD,QACJpD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBH,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAK+F,MAAM,QAAQC,OAAO,QAAQC,YAAY,IAAIC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA6BhE,MAAM,UAASlC,UAACF,EAAAA,EAAAA,KAAA,QAAMqG,EAAE,oGAAoGC,OAAO,UAAUL,YAAY,IAAIM,cAAc,QAAQC,eAAe,aACvTxG,EAAAA,EAAAA,KAAA,KAAAE,SAAG,2DAGP4G,EAAQ/E,KAAI,SAACsB,EAAGO,GACZ,OACI5D,EAAAA,EAAAA,KAAA,OAAKK,UAAU,eAAcH,UACzBF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,YACX8B,MAAO,CACHsE,gBAAgB,OAAD5C,OAASiD,EAAQlD,GAAG8C,UAAS,KAC5CC,eAAgB,QAChBC,mBAAoB,UACtB1G,UACFF,EAAAA,EAAAA,KAAC6C,EAAAA,GAAI,CAACC,GAAI,WAAagE,EAAQlD,GAAGzD,GAAGD,UACjCF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,WAAUH,UACrBF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,cAAaH,UACxBF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,mBAAkBH,UAC7BE,EAAAA,EAAAA,MAAA,KAAAF,SAAA,CAAI4G,EAAQlD,GAAGnB,MAAM,kBAXVmB,EAmB3C,OAKxB,E,UCWA,MAnDA,WAGI,IAAAtD,GAA0CC,EAAAA,EAAAA,UAAS,UAASC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArDyG,EAAavG,EAAA,GAAEwG,EAAgBxG,EAAA,GAGhCyG,EAAgB,SAACC,GACnBF,EAAiBE,GAEjB,IAAMC,EAAaC,SAASC,cAAc,kBACpCC,EAAgBF,SAASC,cAAc,mBAC3B,WAAdH,GACAC,EAAWhF,MAAMoF,aAAe,iBAChCD,EAAcnF,MAAMoF,aAAe,OACnCJ,EAAWhF,MAAMC,MAAQ,OACzB+E,EAAWhF,MAAMqF,WAAa,MAC9BF,EAAcnF,MAAMC,MAAQ,UAC5BkF,EAAcnF,MAAMqF,WAAa,OACZ,YAAdN,IACPC,EAAWhF,MAAMoF,aAAe,OAChCD,EAAcnF,MAAMoF,aAAe,iBACnCD,EAAcnF,MAAMC,MAAQ,OAC5BkF,EAAcnF,MAAMqF,WAAa,MACjCL,EAAWhF,MAAMC,MAAQ,UACzB+E,EAAWhF,MAAMqF,WAAa,MAEtC,EAQA,OANAtF,EAAAA,EAAAA,YAAU,WAENuF,OAAOC,SAAS,EAAG,EACvB,GAAG,KAICtH,EAAAA,EAAAA,MAAAH,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,KAAC2H,EAAAA,EAAM,KACPvH,EAAAA,EAAAA,MAAA,OAAKD,GAAG,SAAQD,SAAA,EACZE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaH,SAAA,EACxBF,EAAAA,EAAAA,KAAA,UAAQK,UAAU,gBAAgBoD,QAAS,kBAAMwD,EAAc,SAAS,EAAC/G,UAACF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,0BAC7EF,EAAAA,EAAAA,KAAA,UAAQK,UAAU,iBAAiBoD,QAAS,kBAAMwD,EAAc,UAAU,EAAC/G,UAACF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,sCAC/EF,EAAAA,EAAAA,KAAA,MAAIK,UAAU,qBAEC,WAAlB0G,IAA8B/G,EAAAA,EAAAA,KAAC4H,EAAM,IACnB,YAAlBb,IAA+B/G,EAAAA,EAAAA,KAAC6H,EAAO,QAE5C7H,EAAAA,EAAAA,KAAC8H,EAAAA,EAAM,MAGnB,C,mECtBA,IA/BqB,WAGjB,IAAAxH,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCY,EAASV,EAAA,GAAEuH,EAAYvH,EAAA,GAG9BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCO,EAAON,EAAA,GAAEmH,EAAUnH,EAAA,GAsB1B,OAnBAqB,EAAAA,EAAAA,YAAU,WAEN,IAAM+F,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEaC,MAAM,+CAA+C,KAAD,EAA7D,OAARN,EAAQG,EAAAI,KAAAJ,EAAAE,KAAA,EACOL,EAASQ,OAAO,KAAD,EAA9BP,EAAME,EAAAI,KACZf,EAAaS,GACbR,GAAW,GAAOU,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAElBO,QAAQC,MAAM,6BAA4BR,EAAAM,IAC1ChB,GAAW,GAAO,yBAAAU,EAAAS,OAAA,GAAAb,EAAA,mBAEzB,kBAVc,OAAAJ,EAAAkB,MAAA,KAAAC,UAAA,KAafpB,GACJ,GAAG,IAGI,CAAE/G,UAAAA,EAAWC,QAAAA,EACxB,C","sources":["components/Footer/Footer.js","components/Header/Seacrh.js","components/Header/Header.js","pages/Mypage/component/Locker.js","pages/Mypage/component/History.js","pages/Mypage/Mypage.js","utils/useData.js"],"sourcesContent":["import './footer.css'; \r\n\r\nfunction Footer() {\r\n    return (\r\n        <>\r\n            <div id=\"footer\">\r\n                <section className=\"footerSection\">\r\n                    <ul className=\"footerList\">\r\n                        <li>회사소개</li>\r\n                        <li>서비스 이용약관</li>\r\n                        <li>개인정보 처리 방침</li>\r\n                        <li>고객센터</li>\r\n                    </ul>\r\n                    <div className=\"company\">\r\n                        <ul className=\"companyInfo\">\r\n                            <li><p>고객센터(이용문의)</p>| <span>02-123-4567</span></li>\r\n                            <li><p>전자우편주소</p>| <span>tlsghwn03@gmail.com</span></li>\r\n                            <li><p>제휴 및 대외 협력</p>| <span>넷플릭스 / 왓챠</span> </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"copyright\">\r\n                        <p>Copyright© 왓플릭스(주) All rights reserved.</p>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer;","import { useEffect, useState } from 'react';\r\nimport './search.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faX } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Logo from '../../assets/logo.png';\r\nimport useMovieData from '../../utils/useData';\r\n\r\nfunction Search() {\r\n\r\n    // 사용자 입력값\r\n    const [userInput, setUserInput] = useState('');\r\n\r\n    // localStorage 값 \r\n    const [local, setLocal] = useState([]);\r\n\r\n    // movieData와 loading 상태 가져오기\r\n    const { movieData, loading } = useMovieData();\r\n\r\n    // 공통함수 localStorage 데이터 가져오기\r\n    const getLocalData = () => {\r\n        const localData = localStorage.getItem('searched');\r\n        return JSON.parse(localData);\r\n    }\r\n   \r\n    // 공통함수 localStorage 데이터 업데이트\r\n    const updateLocalData = (data) => {\r\n        // 중복되는 객체 값 제거하기 -> Set으로 중복 제거된 data를 다시 배열 형태로 저장 \r\n        data = Array.from(new Set(data.map(JSON.stringify))).map(JSON.parse);\r\n        localStorage.setItem('searched', JSON.stringify(data));\r\n    }\r\n    // localStorage에서 데이터 가져오기, 없으면 빈 배열\r\n    useEffect(() => {\r\n        const localData = getLocalData() || [];\r\n\r\n        setLocal(localData);\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return <p style={{color : '#717171'}}>Loading...</p>;\r\n    }\r\n\r\n    // 검색결과 기능 - 입력값과 일치하는 영화 데이터값 추출 \r\n    const filterMovie = movieData.filter((movie) => {\r\n        //문자내 공백 제거 \r\n        const movieWithoutSpaces = movie.title.replace(/\\s/g, '');\r\n        const userInputWithoutSpaces = userInput.replace(/\\s/g, '');\r\n\r\n        //영화 데이터 목록 중 사용자 입력값과 일치하는 영화 데이터 return \r\n        return movieWithoutSpaces.includes(userInputWithoutSpaces)\r\n    })\r\n\r\n\r\n    // 검색내역 기능 - 검색어 localStorage 저장 \r\n    const saveSearchToLocalStorage = (localdata) => {\r\n\r\n        const recentSearched = getLocalData() || []; // localStorage에서 데이터 가져오기, 없으면 빈 배열\r\n\r\n        // localStorage 데이터 업데이트\r\n        recentSearched.push(localdata);\r\n        updateLocalData(recentSearched);\r\n\r\n        return setLocal(recentSearched); // ui 렌더링\r\n    }\r\n\r\n    //검색내역 삭제 기능 - 부분 지우기 동작\r\n    const localDelete = (dataId) => {\r\n\r\n        let searched = getLocalData();\r\n\r\n        // dataId와 일치하는 데이터를 찾으면, 해당 데이터를 배열에서 제거\r\n        for (var i = 0; i < searched.length; i++) {\r\n            if (searched[i].id === dataId) {\r\n                searched.splice(i, 1)\r\n            }\r\n        }\r\n        updateLocalData(searched);\r\n\r\n        return setLocal(searched) //ui 렌더링\r\n    }\r\n\r\n    // 검색내역 삭제 기능 - 모두 지우기 동작\r\n    const localAllDelete = () => {\r\n        const arr = []\r\n        if (localStorage.getItem('searched')) { //검색내역이 있으면 \r\n            updateLocalData(arr); //빈 배열을 Json 형식으로 저장 \r\n            return setLocal(arr) // ui 렌더링 \r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"searchHeaderLogo\">\r\n                <Link to={'/'}>\r\n                    <img src={Logo} className='Header_Logo_link' alt='logolink'></img>\r\n                </Link>\r\n            </h1>\r\n            <div className=\"search\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"콘텐츠 검색\"\r\n                    id=\"search-Data\"\r\n                    onChange={(e) => { setUserInput(e.target.value) }}>\r\n                </input>\r\n                <div className=\"srcollBar\">\r\n                    <div className=\"searchSectionHistory\">\r\n                        {/* 1. 검색어 미입력시  */}\r\n                        {userInput.length === 0 ? (\r\n                            //  검색어 미입력 + 검색내역 없음 -> '검색내역 없음' 표시하기 \r\n                            local.length === 0 ? (\r\n                                <p className=\"text01\">검색 내역 없음</p>\r\n                            ) : (\r\n                                // 검색어 미입력 + 검색내역 있음 -> 검색 내역 보여주기\r\n                                <>\r\n                                    <div id=\"recentSearchHistory\">\r\n                                        <span className=\"history\">최근 검색한 콘텐츠</span>\r\n                                        <span className=\"allDelete\" onClick={() => { localAllDelete() }}>모두 지우기</span>\r\n                                    </div>\r\n                                    {local.map((data, i) => (\r\n                                         <Link to={`/detail/${data.id}`}  state={{ movieData: data }} key={i}>\r\n                                            <div className=\"searchResult\">\r\n                                                <div className=\"searchResultImg\">\r\n                                                    <img src={data.img} alt={`search ${i}`} />\r\n                                                </div>\r\n                                                <div className=\"searchResultTitle\">\r\n                                                    <p>{data.title}</p>\r\n                                                </div>\r\n                                                <div className=\"searchDelete\">\r\n                                                    <FontAwesomeIcon icon={faX}\r\n                                                        size=\"xs\"\r\n                                                        className=\"searchedDeleteIcon\"\r\n                                                        style={{ color: 'rgb(168, 168, 168)' }}\r\n                                                        onClick={(e) => {\r\n                                                            e.preventDefault(); //Link 페이지 이동 제한\r\n                                                            localDelete(data.id)\r\n                                                        }}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    ))}\r\n                                </>\r\n                            )\r\n                        ) : (\r\n                            <>\r\n                                {/* 2. 검색어 입력시 */}\r\n                                {/* 검색어와 일치하는 영화정보 보여주기 */}\r\n                                {filterMovie.map((data, i) => (\r\n                                    <Link to={`/detail/${data.id}`} state={{ movieData: data }} key={data.id}>\r\n                                        <div className=\"searchResult\" onClick={() => saveSearchToLocalStorage(data)}>\r\n                                            <div className=\"searchResultImg\">\r\n                                                <img src={data.img} alt={`result${i}`} />\r\n                                            </div>\r\n                                            <div className=\"searchResultTitle\">\r\n                                                <p>{data.title}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Link>\r\n                                ))}\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search;","import './header.css';\r\nimport Logo from '../../assets/logo.png'\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBox, faHouse } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useState } from 'react';\r\nimport Search from './Seacrh.js';\r\n\r\nfunction Header() {\r\n\r\n    const location = useLocation();\r\n\r\n    // 현재 경로에 따른 버튼 컬러 변경 \r\n    const iconColor = (path) => {\r\n        if (location.pathname === path) {\r\n            return '#eee'; // 현재 페이지\r\n        } else {\r\n            return '#6f747b';\r\n        }\r\n    };\r\n\r\n    // 검색 아이콘 오픈(클릭) 상태\r\n    const [searchOpen, setSearchOpen] = useState(false);\r\n    // 검색 아이콘 컬러\r\n    const [searchColor, setSearchColor] = useState(false);\r\n\r\n    // 검색 모달창 동작\r\n    const toggleSearch = () => {\r\n        setSearchOpen(!searchOpen);\r\n        setSearchColor(!searchColor);\r\n    }\r\n\r\n    // 검색 아이콘 컬러 변경 동작\r\n    const searchColorChange = () => {\r\n        if (searchColor === false) {\r\n            return '#98989a';\r\n        } else if (searchColor === true) {\r\n            return '#eee';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"HeaderLogo\" >\r\n                <Link to={'/'}>\r\n                    <img src={Logo} className='Header_Logo_link' alt='headerlogo'></img>\r\n                </Link>\r\n            </h1>\r\n            <header id=\"Header\">\r\n                <div>\r\n                    <nav className='HeaderNav'>\r\n                        <ul>\r\n                            <li>\r\n                                <Link to={'/'}>\r\n                                    <FontAwesomeIcon icon={faHouse} size=\"xl\" style={{ color: iconColor('/') }} />\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                {/* 검색 기능 추가예정 */}\r\n                                <button className=\"searchIcon\" onClick={toggleSearch} >\r\n                                    <FontAwesomeIcon icon={faMagnifyingGlass} size=\"xl\" style={{ color: searchColorChange(true) }} />\r\n                                </button>\r\n                            </li>\r\n                            <li>\r\n                                <Link to={'/myPage'}>\r\n                                    <FontAwesomeIcon icon={faBox} size=\"xl\" style={{ color: iconColor('/myPage') }} />\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n\r\n                </div>\r\n            </header>\r\n            {/* 검색 컴포넌트 */}\r\n            <section className={`searchSection ${searchOpen ? 'open' : ''}`}>\r\n                <Search></Search>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import './common.css'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faX } from '@fortawesome/free-solid-svg-icons';\r\nimport { deleteLocker } from '../../../redux/store';\r\n\r\nfunction Locker() {\r\n\r\n    const storeState = useSelector((state) => state.locker);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <section className='mp_locker'>\r\n            {storeState.length === 0 ? (\r\n                <div className=\"noLockerSection\">\r\n                    <svg width=\"350px\" height=\"350px\" strokeWidth=\"1\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" color=\"#414141\"><path d=\"M12 7v6M12 17.01l.01-.011M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" stroke=\"#414141\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path></svg>\r\n                    <p>보고싶은 작품이 여기에 보여져요 !</p>\r\n                </div>\r\n            ) :\r\n                storeState.map((e, i) => {\r\n                    return (\r\n                        <div className='mp_locker_li' key={i}>\r\n                            <div className='locker_li'\r\n                                style={{\r\n                                    backgroundImage: `url(${storeState[i].detailImg})`,\r\n                                    backgroundSize: 'cover',\r\n                                    backgroundPosition: 'center'\r\n                                }}>\r\n                                <Link to={'/detail/' + storeState[i].id} >\r\n                                    <div className='mp_movie'>\r\n                                        <div className='mp_movie_li'>\r\n                                            <div className='mp_movie_li_info'>\r\n                                                <p>{storeState[i].title} </p>\r\n                                                <button className='mp_deletLocker' onClick={(e) => {\r\n                                                    e.preventDefault(); //Link 페이지 이동 제한\r\n                                                    dispatch(deleteLocker(storeState[i]))\r\n                                                }}>\r\n                                                    <FontAwesomeIcon icon={faX} size=\"lg\" className='deletIcon' />\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Locker;","import React from \"react\";\r\nimport './common.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction History() {\r\n\r\n    // let으로 선언해야 값 읽기 및 변경 가능 \r\n    let watched = localStorage.getItem('watched');\r\n    //object 형태로 전환\r\n    watched = JSON.parse(watched);\r\n\r\n    return (\r\n        <>\r\n            <section className='mp_locker'>\r\n                {\r\n                    watched.length === 0 ? (\r\n                        <div className=\"noLockerSection\">\r\n                            <svg width=\"350px\" height=\"350px\" strokeWidth=\"1\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" color=\"#414141\"><path d=\"M12 7v6M12 17.01l.01-.011M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z\" stroke=\"#414141\" strokeWidth=\"1\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path></svg>\r\n                            <p>작품을 둘러보세요 !</p>\r\n                        </div>\r\n                    ) :\r\n                        watched.map((e, i) => {\r\n                            return (\r\n                                <div className='mp_locker_li' key={i}>\r\n                                    <div className='locker_li'\r\n                                        style={{\r\n                                            backgroundImage: `url(${watched[i].detailImg})`,\r\n                                            backgroundSize: 'cover',\r\n                                            backgroundPosition: 'center'\r\n                                        }}>\r\n                                        <Link to={'/detail/' + watched[i].id}>\r\n                                            <div className='mp_movie'>\r\n                                                <div className='mp_movie_li'>\r\n                                                    <div className='mp_movie_li_info'>\r\n                                                        <p>{watched[i].title} </p>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                }\r\n            </section>\r\n        </>\r\n    )\r\n}\r\nexport default History;","import './mypage.css';\r\nimport Header from '../../components/Header/Header.js';\r\nimport { useEffect, useState } from 'react';\r\nimport Locker from './component/Locker.js';\r\nimport History from './component/History.js';\r\nimport Footer from '../../components/Footer/Footer.js';\r\n\r\nfunction Mypage() {\r\n\r\n    // 버튼 클릭 상태\r\n    const [clickCompenet, setClickCompenet] = useState('locker');\r\n\r\n    // 버튼 클릭 동작\r\n    const sectionChange = (component) => {\r\n        setClickCompenet(component);\r\n\r\n        const likeButton = document.querySelector('.lockerContent');\r\n        const historyButton = document.querySelector('.historyContent');\r\n        if (component === 'locker') {\r\n            likeButton.style.borderBottom = '2px solid #eee';\r\n            historyButton.style.borderBottom = 'none';\r\n            likeButton.style.color = '#eee';\r\n            likeButton.style.fontWeight = '800';\r\n            historyButton.style.color = '#717171';\r\n            historyButton.style.fontWeight = '500'\r\n        } else if (component === 'history') {\r\n            likeButton.style.borderBottom = 'none';\r\n            historyButton.style.borderBottom = '2px solid #eee';\r\n            historyButton.style.color = '#eee';\r\n            historyButton.style.fontWeight = '800';\r\n            likeButton.style.color = '#717171';\r\n            likeButton.style.fontWeight = '500'\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // 페이지가 처음으로 마운트될 때 스크롤을 맨 위로 이동\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header></Header>\r\n            <div id='myPage'>\r\n                <div className='myPage_menu'>\r\n                    <button className='lockerContent' onClick={() => sectionChange('locker')}><p>보관함</p></button>\r\n                    <button className='historyContent' onClick={() => sectionChange('history')}><p>최근본작품</p></button>\r\n                    <hr className='contentBorder'></hr>\r\n                </div>\r\n                {clickCompenet === 'locker' && <Locker></Locker>}\r\n                {clickCompenet === 'history' && <History></History>}\r\n            </div>\r\n            <Footer></Footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Mypage;","import { useState, useEffect } from 'react';\r\n\r\n// 영화 데이터 가져오는 커스텀 훅. \r\nconst useMovieData = () => {\r\n\r\n    // 영화 데이터를 저장하는 상태\r\n    const [movieData, setMovieData] = useState([]);\r\n\r\n    // 데이터 로딩 여부 나타내는 상태\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // 컴포넌트가 마운트될 때 한번만 데이터를 가져옴\r\n    useEffect(() => {\r\n        // 데이터 비동기적으로 가져오는 함수\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch('https://hojushin.github.io/data/movies.json');\r\n                const result = await response.json();\r\n                setMovieData(result);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching movie data:', error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        // 컴포넌트가 마운트될 때 fetchData 함수를 호출하여 데이터를 가져dha\r\n        fetchData();\r\n    }, []); // 빈 배열을 전달하여 마운트될 때만 실행되도록 함.\r\n\r\n    // 두 상태를 반환.\r\n    return { movieData, loading };\r\n};\r\n\r\nexport default useMovieData;\r\n\r\n"],"names":["_jsx","_Fragment","children","id","_jsxs","className","_useState","useState","_useState2","_slicedToArray","userInput","setUserInput","_useState3","_useState4","local","setLocal","_useMovieData","useMovieData","movieData","loading","getLocalData","localData","localStorage","getItem","JSON","parse","updateLocalData","data","Array","from","Set","map","stringify","setItem","useEffect","style","color","filterMovie","filter","movie","movieWithoutSpaces","title","replace","userInputWithoutSpaces","includes","Link","to","src","Logo","alt","type","placeholder","onChange","e","target","value","length","onClick","arr","localAllDelete","i","concat","state","img","FontAwesomeIcon","icon","faX","size","preventDefault","dataId","searched","splice","localDelete","localdata","recentSearched","push","saveSearchToLocalStorage","location","useLocation","iconColor","path","pathname","searchOpen","setSearchOpen","searchColor","setSearchColor","faHouse","faMagnifyingGlass","faBox","Search","storeState","useSelector","locker","dispatch","useDispatch","width","height","strokeWidth","viewBox","fill","xmlns","d","stroke","strokeLinecap","strokeLinejoin","backgroundImage","detailImg","backgroundSize","backgroundPosition","deleteLocker","watched","clickCompenet","setClickCompenet","sectionChange","component","likeButton","document","querySelector","historyButton","borderBottom","fontWeight","window","scrollTo","Header","Locker","History","Footer","setMovieData","setLoading","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","result","wrap","_context","prev","next","fetch","sent","json","t0","console","error","stop","apply","arguments"],"sourceRoot":""}