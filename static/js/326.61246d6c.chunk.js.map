{"version":3,"file":"static/js/326.61246d6c.chunk.js","mappings":"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","sources":["components/Footer/Footer.js","components/Header/Seacrh.js","components/Header/Header.js","pages/Main/Slide/Slide.js","pages/Main/Main.js","utils/useData.js"],"sourcesContent":["import './footer.css'; \r\n\r\nfunction Footer() {\r\n    return (\r\n        <>\r\n            <div id=\"footer\">\r\n                <section className=\"footerSection\">\r\n                    <ul className=\"footerList\">\r\n                        <li>회사소개</li>\r\n                        <li>서비스 이용약관</li>\r\n                        <li>개인정보 처리 방침</li>\r\n                        <li>고객센터</li>\r\n                    </ul>\r\n                    <div className=\"company\">\r\n                        <ul className=\"companyInfo\">\r\n                            <li><p>고객센터(이용문의)</p>| <span>02-123-4567</span></li>\r\n                            <li><p>전자우편주소</p>| <span>tlsghwn03@gmail.com</span></li>\r\n                            <li><p>제휴 및 대외 협력</p>| <span>넷플릭스 / 왓챠</span> </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"copyright\">\r\n                        <p>Copyright© 왓플릭스(주) All rights reserved.</p>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer;","import { useEffect, useState } from 'react';\r\nimport './search.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faX } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Logo from '../../assets/logo.png';\r\nimport useMovieData from '../../utils/useData';\r\n\r\nfunction Search() {\r\n\r\n    // 사용자 입력값\r\n    const [userInput, setUserInput] = useState('');\r\n\r\n    // localStorage 값 \r\n    const [local, setLocal] = useState([]);\r\n\r\n    // movieData와 loading 상태 가져오기\r\n    const { movieData, loading } = useMovieData();\r\n\r\n    // 공통함수 localStorage 데이터 가져오기\r\n    const getLocalData = () => {\r\n        const localData = localStorage.getItem('searched');\r\n        return JSON.parse(localData);\r\n    }\r\n   \r\n    // 공통함수 localStorage 데이터 업데이트\r\n    const updateLocalData = (data) => {\r\n        // 중복되는 객체 값 제거하기 -> Set으로 중복 제거된 data를 다시 배열 형태로 저장 \r\n        data = Array.from(new Set(data.map(JSON.stringify))).map(JSON.parse);\r\n        localStorage.setItem('searched', JSON.stringify(data));\r\n    }\r\n    // localStorage에서 데이터 가져오기, 없으면 빈 배열\r\n    useEffect(() => {\r\n        const localData = getLocalData() || [];\r\n\r\n        setLocal(localData);\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return <p style={{color : '#717171'}}>Loading...</p>;\r\n    }\r\n\r\n    // 검색결과 기능 - 입력값과 일치하는 영화 데이터값 추출 \r\n    const filterMovie = movieData.filter((movie) => {\r\n        //문자내 공백 제거 \r\n        const movieWithoutSpaces = movie.title.replace(/\\s/g, '');\r\n        const userInputWithoutSpaces = userInput.replace(/\\s/g, '');\r\n\r\n        //영화 데이터 목록 중 사용자 입력값과 일치하는 영화 데이터 return \r\n        return movieWithoutSpaces.includes(userInputWithoutSpaces)\r\n    })\r\n\r\n\r\n    // 검색내역 기능 - 검색어 localStorage 저장 \r\n    const saveSearchToLocalStorage = (localdata) => {\r\n\r\n        const recentSearched = getLocalData() || []; // localStorage에서 데이터 가져오기, 없으면 빈 배열\r\n\r\n        // localStorage 데이터 업데이트\r\n        recentSearched.push(localdata);\r\n        updateLocalData(recentSearched);\r\n\r\n        return setLocal(recentSearched); // ui 렌더링\r\n    }\r\n\r\n    //검색내역 삭제 기능 - 부분 지우기 동작\r\n    const localDelete = (dataId) => {\r\n\r\n        let searched = getLocalData();\r\n\r\n        // dataId와 일치하는 데이터를 찾으면, 해당 데이터를 배열에서 제거\r\n        for (var i = 0; i < searched.length; i++) {\r\n            if (searched[i].id === dataId) {\r\n                searched.splice(i, 1)\r\n            }\r\n        }\r\n        updateLocalData(searched);\r\n\r\n        return setLocal(searched) //ui 렌더링\r\n    }\r\n\r\n    // 검색내역 삭제 기능 - 모두 지우기 동작\r\n    const localAllDelete = () => {\r\n        const arr = []\r\n        if (localStorage.getItem('searched')) { //검색내역이 있으면 \r\n            updateLocalData(arr); //빈 배열을 Json 형식으로 저장 \r\n            return setLocal(arr) // ui 렌더링 \r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"searchHeaderLogo\">\r\n                <Link to={'/'}>\r\n                    <img src={Logo} className='Header_Logo_link' alt='logolink'></img>\r\n                </Link>\r\n            </h1>\r\n            <div className=\"search\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"콘텐츠 검색\"\r\n                    id=\"search-Data\"\r\n                    onChange={(e) => { setUserInput(e.target.value) }}>\r\n                </input>\r\n                <div className=\"srcollBar\">\r\n                    <div className=\"searchSectionHistory\">\r\n                        {/* 1. 검색어 미입력시  */}\r\n                        {userInput.length === 0 ? (\r\n                            //  검색어 미입력 + 검색내역 없음 -> '검색내역 없음' 표시하기 \r\n                            local.length === 0 ? (\r\n                                <p className=\"text01\">검색 내역 없음</p>\r\n                            ) : (\r\n                                // 검색어 미입력 + 검색내역 있음 -> 검색 내역 보여주기\r\n                                <>\r\n                                    <div id=\"recentSearchHistory\">\r\n                                        <span className=\"history\">최근 검색한 콘텐츠</span>\r\n                                        <span className=\"allDelete\" onClick={() => { localAllDelete() }}>모두 지우기</span>\r\n                                    </div>\r\n                                    {local.map((data, i) => (\r\n                                         <Link to={`/detail/${data.id}`}  state={{ movieData: data }} key={i}>\r\n                                            <div className=\"searchResult\">\r\n                                                <div className=\"searchResultImg\">\r\n                                                    <img src={data.img} alt={`search ${i}`} />\r\n                                                </div>\r\n                                                <div className=\"searchResultTitle\">\r\n                                                    <p>{data.title}</p>\r\n                                                </div>\r\n                                                <div className=\"searchDelete\">\r\n                                                    <FontAwesomeIcon icon={faX}\r\n                                                        size=\"xs\"\r\n                                                        className=\"searchedDeleteIcon\"\r\n                                                        style={{ color: 'rgb(168, 168, 168)' }}\r\n                                                        onClick={(e) => {\r\n                                                            e.preventDefault(); //Link 페이지 이동 제한\r\n                                                            localDelete(data.id)\r\n                                                        }}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    ))}\r\n                                </>\r\n                            )\r\n                        ) : (\r\n                            <>\r\n                                {/* 2. 검색어 입력시 */}\r\n                                {/* 검색어와 일치하는 영화정보 보여주기 */}\r\n                                {filterMovie.map((data, i) => (\r\n                                    <Link to={`/detail/${data.id}`} state={{ movieData: data }} key={data.id}>\r\n                                        <div className=\"searchResult\" onClick={() => saveSearchToLocalStorage(data)}>\r\n                                            <div className=\"searchResultImg\">\r\n                                                <img src={data.img} alt={`result${i}`} />\r\n                                            </div>\r\n                                            <div className=\"searchResultTitle\">\r\n                                                <p>{data.title}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Link>\r\n                                ))}\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Search;","import './header.css';\r\nimport Logo from '../../assets/logo.png'\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBox, faHouse } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useState } from 'react';\r\nimport Search from './Seacrh.js';\r\n\r\nfunction Header() {\r\n\r\n    const location = useLocation();\r\n\r\n    // 현재 경로에 따른 버튼 컬러 변경 \r\n    const iconColor = (path) => {\r\n        if (location.pathname === path) {\r\n            return '#eee'; // 현재 페이지\r\n        } else {\r\n            return '#6f747b';\r\n        }\r\n    };\r\n\r\n    // 검색 아이콘 오픈(클릭) 상태\r\n    const [searchOpen, setSearchOpen] = useState(false);\r\n    // 검색 아이콘 컬러\r\n    const [searchColor, setSearchColor] = useState(false);\r\n\r\n    // 검색 모달창 동작\r\n    const toggleSearch = () => {\r\n        setSearchOpen(!searchOpen);\r\n        setSearchColor(!searchColor);\r\n    }\r\n\r\n    // 검색 아이콘 컬러 변경 동작\r\n    const searchColorChange = () => {\r\n        if (searchColor === false) {\r\n            return '#98989a';\r\n        } else if (searchColor === true) {\r\n            return '#eee';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"HeaderLogo\" >\r\n                <Link to={'/'}>\r\n                    <img src={Logo} className='Header_Logo_link' alt='headerlogo'></img>\r\n                </Link>\r\n            </h1>\r\n            <header id=\"Header\">\r\n                <div>\r\n                    <nav className='HeaderNav'>\r\n                        <ul>\r\n                            <li>\r\n                                <Link to={'/'}>\r\n                                    <FontAwesomeIcon icon={faHouse} size=\"xl\" style={{ color: iconColor('/') }} />\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                {/* 검색 기능 추가예정 */}\r\n                                <button className=\"searchIcon\" onClick={toggleSearch} >\r\n                                    <FontAwesomeIcon icon={faMagnifyingGlass} size=\"xl\" style={{ color: searchColorChange(true) }} />\r\n                                </button>\r\n                            </li>\r\n                            <li>\r\n                                <Link to={'/myPage'}>\r\n                                    <FontAwesomeIcon icon={faBox} size=\"xl\" style={{ color: iconColor('/myPage') }} />\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n\r\n                </div>\r\n            </header>\r\n            {/* 검색 컴포넌트 */}\r\n            <section className={`searchSection ${searchOpen ? 'open' : ''}`}>\r\n                <Search></Search>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import './slide.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Slide() {\r\n\r\n    // 영화 데이터를 담을 state\r\n    const [slideMovie, setSlideMovie] = useState(null);\r\n\r\n    // 데이터 패칭\r\n    useEffect(() => {\r\n        fetch('https://hojushin.github.io/data/main.json', { cache: 'force-cache' })\r\n            .then(result => result.json())\r\n            .then(result => setSlideMovie(result))\r\n            .catch(error => {\r\n                console.error('Error fetching data:', error);\r\n            });\r\n    }, [])\r\n\r\n    // 데이터 패칭을 기다리는 동안 로딩 메세지 렌더링\r\n    if (slideMovie === null) {\r\n        return <p style={{color : '#717171'}}>Loading...</p>;\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className='backgroundSection'>\r\n                <input type='radio' className='slide' id='slide01' defaultChecked></input>\r\n                <input type='radio' className='slide' id='slide02'></input>\r\n                <input type='radio' className='slide' id='slide03'></input>\r\n                <input type='radio' className='slide' id='slide04'></input>\r\n                <ul className='slideList'>\r\n                    <li className='slideItem'>\r\n                        <div>\r\n                            <label htmlFor='slide04'></label>\r\n                            <label htmlFor='slide02'></label>\r\n                            <img src={slideMovie[0].detailImg} alt={`slide${slideMovie[0].id}`} />\r\n\r\n                        </div>\r\n                    </li>\r\n                    <li className='slideItem'>\r\n                        <div>\r\n                            <label htmlFor='slide01'></label>\r\n                            <label htmlFor='slide03'></label>\r\n                            <img src={slideMovie[1].detailImg} alt={`slide${slideMovie[1].id}`} />\r\n\r\n                        </div>\r\n                    </li>\r\n                    <li className='slideItem'>\r\n                        <div>\r\n                            <label htmlFor='slide02'></label>\r\n                            <label htmlFor='slide04'></label>\r\n                            <img src={slideMovie[2].detailImg} alt={`slide${slideMovie[2].id}`}/>\r\n                        </div>\r\n                    </li>\r\n                    <li className='slideItem'>\r\n                        <div>\r\n                            <label htmlFor='slide03'></label>\r\n                            <label htmlFor='slide01'></label>\r\n                            <img src={slideMovie[3].detailImg} alt={`slide${slideMovie[3].id}`}/>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Slide;","import './main.css';\r\nimport Header from '../../components/Header/Header.js';\r\nimport Footer from '../../components/Footer/Footer.js';\r\nimport { Suspense, lazy, useEffect, useState } from 'react';\r\nimport Slide from './Slide/Slide.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Main() {\r\n\r\n    const Contents = lazy(() => import('./Contents/Contents.js'))\r\n\r\n    //현재 뷰포트 사이즈 상태값 저장\r\n    const [viewportSize, setViewportSize] = useState(window.innerWidth);\r\n\r\n    useEffect(() => {\r\n        //브라우저 창 너비를 가져와 setViewportSize 함수호출하여 상태값 업데이트 동작\r\n        const handleResize = () => setViewportSize(window.innerWidth);\r\n\r\n        // resize는 브라우저 창의 크기가 변경될 때 발생하는 이벤트 감지\r\n        // resize 이벤트가 발생되면 handleResize이 호출되어 뷰포트 크기 업데이트 \r\n        window.addEventListener('resize', handleResize);\r\n\r\n        // 컴포넌트가 언마운트 시 이벤트 리스너 제거\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className='container'>\r\n                <Header></Header>\r\n                <main>\r\n                    <div className='background_main'>\r\n                        <div className='background_mainSection'>\r\n                            <div className='movieMain'>\r\n                                <span className='movieMainDesc'>이주의 인기작</span>\r\n                                <p className='hot'>Hot</p>\r\n                                <span className='movieTitle_main'>오펜하이머</span>\r\n                                <img src='https://www.themoviedb.org/t/p/original/fm6KqXpk3M2HVveHwCrBSSBaO0V.jpg'\r\n                                    alt='minImg'></img>\r\n                            </div>\r\n                            <div className='movieMain'>\r\n                                <span className='movieMainDesc'>새로 올라온 콘텐츠</span>\r\n                                <p className='new'>New</p>\r\n                                <span className='movieTitle_main'>스파이더맨: 어크로스 더 유니버스, 이두나! 등</span>\r\n                                <Slide></Slide>\r\n                            </div>\r\n                        </div>\r\n                        <div className='promotion'>\r\n                            <div className='promotion_bar'>\r\n                                <div className='promotion_bar_desc'>\r\n                                    <p>7,000원으로 만나는 왓플릭스.</p>\r\n                                    <span>지금 구독 시작하고 모든 콘텐츠를 무제한으로 감상해보세요.</span>\r\n                                    <Link href=\"/\">자세히 알아보기</Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                    <Contents />\r\n                </Suspense>\r\n                <section className='genreSection'>\r\n                    <p className='genreDesc'>다양한 장르로 즐기세요</p>\r\n                    <div className='genreList'>\r\n                        <div className='genreRow'>\r\n                            <p>드라마</p>\r\n                            <p>SF</p>\r\n                            <p>코미디</p>\r\n                            <p>모험</p>\r\n                            <p>애니메이션</p>\r\n                        </div>\r\n                        <div className='genreRow'>\r\n                            <p>액션</p>\r\n                            <p>로맨스</p>\r\n                            <p>역사</p>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n            <Footer></Footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main;","import { useState, useEffect } from 'react';\r\n\r\n// 영화 데이터 가져오는 커스텀 훅. \r\nconst useMovieData = () => {\r\n\r\n    // 영화 데이터를 저장하는 상태\r\n    const [movieData, setMovieData] = useState([]);\r\n\r\n    // 데이터 로딩 여부 나타내는 상태\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // 컴포넌트가 마운트될 때 한번만 데이터를 가져옴\r\n    useEffect(() => {\r\n        // 데이터 비동기적으로 가져오는 함수\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await fetch('https://hojushin.github.io/data/movies.json');\r\n                const result = await response.json();\r\n                setMovieData(result);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching movie data:', error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        // 컴포넌트가 마운트될 때 fetchData 함수를 호출하여 데이터를 가져dha\r\n        fetchData();\r\n    }, []); // 빈 배열을 전달하여 마운트될 때만 실행되도록 함.\r\n\r\n    // 두 상태를 반환.\r\n    return { movieData, loading };\r\n};\r\n\r\nexport default useMovieData;\r\n\r\n"],"names":["_jsx","_Fragment","children","id","_jsxs","className","_useState","useState","_useState2","_slicedToArray","userInput","setUserInput","_useState3","_useState4","local","setLocal","_useMovieData","useMovieData","movieData","loading","getLocalData","localData","localStorage","getItem","JSON","parse","updateLocalData","data","Array","from","Set","map","stringify","setItem","useEffect","style","color","filterMovie","filter","movie","movieWithoutSpaces","title","replace","userInputWithoutSpaces","includes","Link","to","src","Logo","alt","type","placeholder","onChange","e","target","value","length","onClick","arr","localAllDelete","i","concat","state","img","FontAwesomeIcon","icon","faX","size","preventDefault","dataId","searched","splice","localDelete","localdata","recentSearched","push","saveSearchToLocalStorage","location","useLocation","iconColor","path","pathname","searchOpen","setSearchOpen","searchColor","setSearchColor","faHouse","faMagnifyingGlass","faBox","Search","slideMovie","setSlideMovie","fetch","cache","then","result","json","catch","error","console","defaultChecked","htmlFor","detailImg","Contents","lazy","window","innerWidth","setViewportSize","handleResize","addEventListener","removeEventListener","Header","Slide","href","Suspense","fallback","Footer","setMovieData","setLoading","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","sent","t0","stop","apply","arguments"],"sourceRoot":""}